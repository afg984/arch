#!/usr/bin/env python

import subprocess
import os
import json
import argparse


parser = argparse.ArgumentParser()
parser.add_argument('mountpoint', nargs='?', default='/')
mountpoint = parser.parse_args().mountpoint

with subprocess.Popen(['findmnt', mountpoint, '--json', '--output', 'label,uuid,partuuid'], stdin=subprocess.DEVNULL, stdout=subprocess.PIPE) as p:
    data = json.load(p.stdout)


def write(a, b, comment=False):
    print(['', '#'][comment] + a.ljust(7), b)


root = data['filesystems'][0]
write('title', 'Arch Linux')
write('linux', '/vmlinuz-linux')
for initrd in ['intel-ucode.img', 'amd-ucode.img', 'initramfs-linux.img']:
    if os.path.exists(os.path.join(mountpoint, 'boot', initrd)):
        write('initrd', '/' + initrd)
options_printed = False
for specifier in ['label', 'uuid', 'partuuid']:
    value = root[specifier]
    if value is not None:
        to_print = f'root={specifier.upper()}={value} rw scsi_mod.use_blk_mq=1'
        write('options', to_print, options_printed)
        options_printed = True
